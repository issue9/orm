name: Go
on: [push, pull_request]
jobs:

  test:
    name: Test
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest] # action 不支持非 linux 下的容器, windows-latest, macOS-latest
        go: ['1.13.x', '1.15.x']

    services:
      postgres:
        image: postgres:10.10
        ports:
          - 5432/tcp
        options: >-
          --health-cmd pg_isready
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
      mysql:
        image: mariadb:10.4
        env:
          MYSQL_ROOT_PASSWORD: root
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3


    steps:

    - name: 创建数据库
      run: |
        psql -U postgres --host postgres -c 'CREATE DATABASE orm_test;'
        mysql -uroot --host mysql -proot -e 'CREATE DATABASE IF NOT EXISTS orm_test;'

    - name: 安装 Go ${{ matrix.go }}
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go }}
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Vet
      run: go vet -v ./...
        
    - name: Test
      run: go test -v -coverprofile=coverage.txt -covermode=atomic ./...
      
    - name: Upload coverage to Codecov  
      uses: codecov/codecov-action@v1
      with:
        token: ${{secrets.CODECOV_TOKEN}}
        file: ./coverage.txt
